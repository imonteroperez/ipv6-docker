pipeline {
  agent {
    kubernetes {
      label 'agent-label-' + UUID.randomUUID().toString()
      inheritFrom 'default'
      cloud 'kubernetes'
      yaml """
apiVersion: v1
kind: Pod
metadata:
  name: packer-builder
spec:
  serviceAccountName: packer-builder
  containers:
  - name: packer
    image: us-east1-docker.pkg.dev/cloudbees-artifact-registry/common/packer-builder:packer-builder-14
    command:
    - /usr/bin/cat
    tty: true
    resources:
      requests:
        memory: "1Gi"
        cpu: "1500m"
      limits:
        memory: "2Gi"
        cpu: "3000m"
"""
    }
  }

  options {
      ansiColor('xterm')
      timeout(time: 30, unit: 'MINUTES')
      buildDiscarder(logRotator(artifactNumToKeepStr: '5', numToKeepStr: '10'))
  }

  stages {
    stage('Build') {
      steps{
        container(name: 'packer', shell: '/bin/sh') {
            sh 'packer build -on-error=cleanup ipv6-agents.json | tee output.txt'
            script {
              def out = sh (
                script: 'tail -n 1 output.txt | cut -d ":" -f 3 | xargs echo',
                returnStdout: true
              ).trim()
                currentBuild.description = out
            }
        }
      }
    }
  }
}